{{- if and .Values.ingress.enabled .Values.service.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "app.fullname" . }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.appSelector.labels }}
  labels:
    {{- .Values.appSelector.labels | toYaml | nindent 4 }}
    {{- if .Values.additionalLabels }}
      {{- .Values.additionalLabels | toYaml | nindent 4 }}
    {{- end }}
  {{- end }}
  annotations:
    {{- .Values.ingress.annotations | toYaml | nindent 4 }}
    {{- if .Values.ingress.whitelist }}
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ join ", " .Values.ingress.whitelist | quote }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ default (printf "%s-%s-tls" (include "app.fullname" .) (lower (randAlphaNum 6))) .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.hostname }}
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ include "app.fullname" . }}
                port: 
                  number: {{ .Values.deployment.containers.omc.portHttp.containerPort }}
{{- end }}